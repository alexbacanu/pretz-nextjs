/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/products": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          pID?: parameters["rowFilter.products.pID"];
          pStore?: parameters["rowFilter.products.pStore"];
          pName?: parameters["rowFilter.products.pName"];
          pLink?: parameters["rowFilter.products.pLink"];
          pImg?: parameters["rowFilter.products.pImg"];
          pCategory?: parameters["rowFilter.products.pCategory"];
          pReviews?: parameters["rowFilter.products.pReviews"];
          pStars?: parameters["rowFilter.products.pStars"];
          pGeniusTag?: parameters["rowFilter.products.pGeniusTag"];
          pUsedTag?: parameters["rowFilter.products.pUsedTag"];
          priceCurrent?: parameters["rowFilter.products.priceCurrent"];
          priceRetail?: parameters["rowFilter.products.priceRetail"];
          priceSlashed?: parameters["rowFilter.products.priceSlashed"];
          priceUsed?: parameters["rowFilter.products.priceUsed"];
          timeseries?: parameters["rowFilter.products.timeseries"];
          crawledAt?: parameters["rowFilter.products.crawledAt"];
          fts?: parameters["rowFilter.products.fts"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["products"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** products */
          products?: definitions["products"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          pID?: parameters["rowFilter.products.pID"];
          pStore?: parameters["rowFilter.products.pStore"];
          pName?: parameters["rowFilter.products.pName"];
          pLink?: parameters["rowFilter.products.pLink"];
          pImg?: parameters["rowFilter.products.pImg"];
          pCategory?: parameters["rowFilter.products.pCategory"];
          pReviews?: parameters["rowFilter.products.pReviews"];
          pStars?: parameters["rowFilter.products.pStars"];
          pGeniusTag?: parameters["rowFilter.products.pGeniusTag"];
          pUsedTag?: parameters["rowFilter.products.pUsedTag"];
          priceCurrent?: parameters["rowFilter.products.priceCurrent"];
          priceRetail?: parameters["rowFilter.products.priceRetail"];
          priceSlashed?: parameters["rowFilter.products.priceSlashed"];
          priceUsed?: parameters["rowFilter.products.priceUsed"];
          timeseries?: parameters["rowFilter.products.timeseries"];
          crawledAt?: parameters["rowFilter.products.crawledAt"];
          fts?: parameters["rowFilter.products.fts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          pID?: parameters["rowFilter.products.pID"];
          pStore?: parameters["rowFilter.products.pStore"];
          pName?: parameters["rowFilter.products.pName"];
          pLink?: parameters["rowFilter.products.pLink"];
          pImg?: parameters["rowFilter.products.pImg"];
          pCategory?: parameters["rowFilter.products.pCategory"];
          pReviews?: parameters["rowFilter.products.pReviews"];
          pStars?: parameters["rowFilter.products.pStars"];
          pGeniusTag?: parameters["rowFilter.products.pGeniusTag"];
          pUsedTag?: parameters["rowFilter.products.pUsedTag"];
          priceCurrent?: parameters["rowFilter.products.priceCurrent"];
          priceRetail?: parameters["rowFilter.products.priceRetail"];
          priceSlashed?: parameters["rowFilter.products.priceSlashed"];
          priceUsed?: parameters["rowFilter.products.priceUsed"];
          timeseries?: parameters["rowFilter.products.timeseries"];
          crawledAt?: parameters["rowFilter.products.crawledAt"];
          fts?: parameters["rowFilter.products.fts"];
        };
        body: {
          /** products */
          products?: definitions["products"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  products: {
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: text */
    pID?: string;
    /** Format: text */
    pStore?: string;
    /** Format: text */
    pName?: string;
    /** Format: text */
    pLink?: string;
    /** Format: text */
    pImg?: string;
    /** Format: text */
    pCategory?: string;
    /**
     * Format: integer
     * @default 0
     */
    pReviews?: number;
    /**
     * Format: integer
     * @default 0
     */
    pStars?: number;
    /** Format: boolean */
    pGeniusTag?: boolean;
    /** Format: boolean */
    pUsedTag?: boolean;
    /** Format: real */
    priceCurrent?: number;
    /** Format: real */
    priceRetail?: number;
    /** Format: real */
    priceSlashed?: number;
    /** Format: real */
    priceUsed?: number;
    /** Format: jsonb */
    timeseries?: unknown;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    crawledAt?: string;
    /** Format: tsvector */
    fts?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description products */
  "body.products": definitions["products"];
  /** Format: text */
  "rowFilter.products.id": string;
  /** Format: text */
  "rowFilter.products.pID": string;
  /** Format: text */
  "rowFilter.products.pStore": string;
  /** Format: text */
  "rowFilter.products.pName": string;
  /** Format: text */
  "rowFilter.products.pLink": string;
  /** Format: text */
  "rowFilter.products.pImg": string;
  /** Format: text */
  "rowFilter.products.pCategory": string;
  /** Format: integer */
  "rowFilter.products.pReviews": string;
  /** Format: integer */
  "rowFilter.products.pStars": string;
  /** Format: boolean */
  "rowFilter.products.pGeniusTag": string;
  /** Format: boolean */
  "rowFilter.products.pUsedTag": string;
  /** Format: real */
  "rowFilter.products.priceCurrent": string;
  /** Format: real */
  "rowFilter.products.priceRetail": string;
  /** Format: real */
  "rowFilter.products.priceSlashed": string;
  /** Format: real */
  "rowFilter.products.priceUsed": string;
  /** Format: jsonb */
  "rowFilter.products.timeseries": string;
  /** Format: timestamp without time zone */
  "rowFilter.products.crawledAt": string;
  /** Format: tsvector */
  "rowFilter.products.fts": string;
}

export interface operations {}

export interface external {}
